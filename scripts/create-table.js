#!/usr/bin/env node
const fs = require('fs')
const path = require('path')

// --- –∞—Ä–≥—É–º–µ–Ω—Ç—ã ---
const [,, rawName, rawTitle] = process.argv

if (!rawName || !rawTitle) {
  console.error('‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/create-table.js clients "–ö–ª–∏–µ–Ω—Ç—ã"')
  process.exit(1)
}

const entity = rawName.toLowerCase()
const title = rawTitle
const Entity = entity.charAt(0).toUpperCase() + entity.slice(1)

const pageFile = `src/pages/${Entity}Page.jsx`
const mainFile = `src/components/${entity}/${Entity}Main.jsx`
const columnsEntry = `export const ${entity}TableColumns = [\n  // { field: '', title: '', type: 'text' },\n];\n`

// --- —Å–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ---
const entityDir = path.join('src', 'components', entity)
if (!fs.existsSync(entityDir)) {
  fs.mkdirSync(entityDir, { recursive: true })
  console.log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: ${entityDir}`)
}

// --- —Å–æ–∑–¥–∞—ë–º ClientsMain.jsx ---
if (!fs.existsSync(mainFile)) {
  fs.writeFileSync(mainFile, `import BaseTable from '@/components/common/BaseTable'
import { ${entity}TableColumns } from '@/components/common/tableDefinitions'

export default function ${Entity}Main() {
  return (
    <BaseTable
      rows={[]}
      columns={${entity}TableColumns}
      onSave={() => {}}
      onDelete={() => {}}
    />
  )
}
`)
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${mainFile}`)
}

// --- —Å–æ–∑–¥–∞—ë–º ClientsPage.jsx ---
if (!fs.existsSync(pageFile)) {
  fs.writeFileSync(pageFile, `import TabRendererPage from '@/components/common/TabRendererPage'
import ${Entity}Main from '@/components/${entity}/${Entity}Main'

export default function ${Entity}Page() {
  return (
    <TabRendererPage tabKey="${entity}">
      <${Entity}Main />
    </TabRendererPage>
  )
}
`)
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${pageFile}`)
}

// --- –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ tableDefinitions.js ---
const defFile = path.join('src', 'components', 'common', 'tableDefinitions.js')
if (fs.existsSync(defFile)) {
  const defContent = fs.readFileSync(defFile, 'utf-8')
  const entry = `export const ${entity}TableColumns = [`
  if (!defContent.includes(entry)) {
    fs.appendFileSync(defFile, '\n' + columnsEntry)
    console.log(`üß© –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–≥–æ—Ç–æ–≤–∫–∞ –≤ tableDefinitions.js`)
  } else {
    console.log(`‚ÑπÔ∏è tableDefinitions.js —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ${entity}TableColumns`)
  }
} else {
  console.warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª tableDefinitions.js ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω–æ')
}

console.log(`\nüöÄ –ì–æ—Ç–æ–≤–æ! –ù–µ –∑–∞–±—É–¥—å:`)
console.log(`1. –°–æ–∑–¥–∞—Ç—å –≤–∫–ª–∞–¥–∫—É "${title}" —Å tab_name = "${entity}"`)
console.log(`2. –ù–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∞–≤–∞ –≤ "–†–æ–ª–∏ –∏ –¥–æ—Å—Ç—É–ø—ã"`)
console.log(`3. –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –≤ AppRouter.jsx: /${entity} ‚Üí ${Entity}Page`)
